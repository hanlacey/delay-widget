{"version":3,"sources":["components/columns.js","components/Table.jsx","utils/key.js","utils/api.js","components/AllLines.jsx","components/Header.jsx","components/Description.jsx","components/Widget.jsx","components/ShowTable.jsx","components/App.js","index.js"],"names":["COLUMNS","header","accessor","Table","tableData","columns","useMemo","data","tableInstance","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps","token","request","axios","create","baseURL","AllLines","useState","lineData","setLineData","isDataReady","setIsDataReady","useEffect","get","then","formattedLineData","line","lineName","name","status","lineStatuses","statusSeverityDescription","link","to","id","formatLineData","catch","err","console","log","className","Header","Description","params","description","setDescription","isDescriptionReady","setIsDescriptionReady","line_id","reason","Widget","timestamp","Date","now","lastUpdated","Intl","DateTimeFormat","year","month","day","hour","minute","format","ShowTable","Button","App","default","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.60c040a2.chunk.js","sourcesContent":["export const COLUMNS = [\n    {\n        header: \"Line\",\n        accessor: \"lineName\"\n    },\n    {\n        header: \"Status\",\n        accessor: \"status\"\n    },\n    {\n        header: \"Info\",\n        accessor: \"link\"\n    }\n]","import React, { useState, useEffect, useMemo } from \"react\";\nimport { useTable } from \"react-table\";\nimport { COLUMNS } from \"./columns\";\nimport \"../styles/Table.css\";\n\nexport default function Table({ tableData }) {\n\tconst columns = useMemo(() => COLUMNS, []);\n\tconst data = useMemo(() => tableData, [tableData]);\n\tconst tableInstance = useTable({ columns, data });\n\tconst { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\n\t\ttableInstance;\n\n\treturn (\n\t\t<table {...getTableProps()}>\n\t\t\t<thead>\n\t\t\t\t{headerGroups.map((headerGroup) => (\n\t\t\t\t\t<tr {...headerGroup.getHeaderGroupProps()}>\n\t\t\t\t\t\t{headerGroup.headers.map((column) => (\n\t\t\t\t\t\t\t<th {...column.getHeaderProps()}>{column.render(\"header\")}</th>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</tr>\n\t\t\t\t))}\n\t\t\t</thead>\n\t\t\t<tbody {...getTableBodyProps()}>\n\t\t\t\t{rows.map((row) => {\n\t\t\t\t\tprepareRow(row);\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<tr {...row.getRowProps()}>\n\t\t\t\t\t\t\t{row.cells.map((cell) => {\n\t\t\t\t\t\t\t\treturn <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>;\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</tbody>\n\t\t</table>\n\t);\n}\n","const token = \"f719f0f104734bbda1a142ad6f90e2f6\"\n\nexport default token","import axios from \"axios\"\nimport token from './key.js'\n\nconst request = axios.create({\n    baseURL: \"https://api.tfl.gov.uk\"\n})\n\n\nexport const getAllStatuses = () => {\n    return request.get(`/Line/Mode/tube/Status`,\n        {\n            headers: {\n                'Authorization': `Basic ${token}`\n            }\n        })\n        .then(({ data }) => {\n            return data\n        })\n}\n\nexport const getStatusDescriptionById = (id) => {\n    return request.get(`/Line/${id}/Status`,\n        {\n            headers: {\n                'Authorization': `Basic ${token}`\n            }\n        })\n        .then(({ data }) => {\n            const description = data[0].lineStatuses[0].reason\n            const { name } = data[0]\n\n            return description ? description : `There are currently no reported disruptions on the ${name} line.`\n        })\n}","import React, { useState, useEffect } from \"react\";\nimport Table from \"./Table\";\nimport { Link } from \"@reach/router\";\nimport * as api from \"../utils/api\";\nimport \"../styles/Widget.css\";\n\nexport default function AllLines() {\n\tconst [lineData, setLineData] = useState([]);\n\tconst [isDataReady, setIsDataReady] = useState(false);\n\n\tfunction formatLineData(data) {\n\t\tconst formattedLineData = data.map((line) => {\n\t\t\tconst lineName = line.name;\n\t\t\tconst status = line.lineStatuses[0].statusSeverityDescription;\n\t\t\tconst link = <Link to={`${line.id}`}>View more</Link>;\n\t\t\treturn { lineName, status, link };\n\t\t});\n\t\tsetLineData(formattedLineData);\n\t}\n\n\tuseEffect(() => {\n\t\tapi\n\t\t\t.getAllStatuses()\n\t\t\t.then((data) => {\n\t\t\t\tformatLineData(data);\n\t\t\t\tsetIsDataReady(true);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\t}, []);\n\n\treturn (\n\t\t<div className=\"info-container\">\n\t\t\t{!isDataReady ? <p>Loading...</p> : <Table tableData={lineData} />}\n\t\t</div>\n\t);\n}\n","import React from \"react\";\nimport { Link } from \"@reach/router\";\nimport \"../styles/App.css\";\n\nexport default function Header() {\n\treturn (\n\t\t<Link to=\"/travel\" className=\"Header\">\n\t\t\tTRAVEL WIDGET\n\t\t</Link>\n\t);\n}\n","import React, { useEffect, useState } from \"react\";\nimport * as api from \"../utils/api\";\nimport { Link } from \"@reach/router\";\nimport \"../styles/Widget.css\";\n\nexport default function Description(params) {\n\tconst [description, setDescription] = useState(\"\");\n\tconst [isDescriptionReady, setIsDescriptionReady] = useState(false);\n\n\tuseEffect(() => {\n\t\tapi.getStatusDescriptionById(params.line_id).then((description) => {\n\t\t\tsetDescription(description);\n\t\t\tsetIsDescriptionReady(true);\n\t\t});\n\t}, []);\n\n\treturn (\n\t\t<div className=\"info-container\">\n\t\t\t{!isDescriptionReady ? (\n\t\t\t\t<p>Please wait...</p>\n\t\t\t) : (\n\t\t\t\t<div id=\"description-container\">\n\t\t\t\t\t<div id=\"description\">{description}</div>\n\t\t\t\t\t<div id=\"go-back\">\n\t\t\t\t\t\t<Link to=\"/travel\">Go back</Link>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n","import React from \"react\";\nimport \"../styles/Widget.css\";\nimport AllLines from \"./AllLines\";\nimport Description from \"./Description\";\n\nexport default function Widget(params) {\n\tconst { line_id } = params;\n\tconst timestamp = Date.now();\n\n\tconst lastUpdated = new Intl.DateTimeFormat(\"en-GB\", {\n\t\tyear: \"numeric\",\n\t\tmonth: \"2-digit\",\n\t\tday: \"2-digit\",\n\t\thour: \"2-digit\",\n\t\tminute: \"2-digit\",\n\t}).format(timestamp);\n\treturn (\n\t\t<div className=\"Widget\">\n\t\t\t<div id=\"last-updated\">LAST UPDATED: {lastUpdated}</div>\n\t\t\t{line_id ? <Description line_id={line_id} /> : <AllLines />}\n\t\t</div>\n\t);\n}\n","import React from \"react\";\nimport { Link } from \"@reach/router\";\nimport { Button } from \"react-bootstrap\";\nimport \"../styles/Widget.css\";\nexport default function ShowTable() {\n\treturn (\n\t\t<div className=\"show-table\">\n\t\t\t<Link to=\"/travel\">\n\t\t\t\t<Button id=\"show-lines\">View all line statuses</Button>\n\t\t\t</Link>\n\t\t</div>\n\t);\n}\n","import '../styles/App.css'\nimport AllLines from './AllLines';\nimport Header from './Header';\nimport Description from './Description';\nimport Widget from './Widget';\nimport ShowTable from './ShowTable'\nimport { Router } from '@reach/router'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Router>\n        <ShowTable default />\n        <Widget path=\"/travel\" />\n        <Widget path=\"/travel/:line_id\" />\n      </Router>\n    </div >\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}